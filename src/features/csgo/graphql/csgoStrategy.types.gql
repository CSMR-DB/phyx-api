enum StrategySide {
  ATK
  DEF
}

type CSGOStrategyItem {
  internal_id: String!
  # name: String
  # cost: Int
  # slot: String
}

type CSGOLoadout {
  cost: Int!
  primary: CSGOStrategyItem!
  secondary: CSGOStrategyItem!
  gear: [CSGOStrategyItem!]!
  utilities: [CSGOStrategyItem!]!
}

type Position {
  x: Int!
  y: Int!
}

type Player {
  internal_id: ID!
  color: String!
  name: String!
  role: String
  loadout: CSGOLoadout!
  positions: [Position!]!
}

type Players {
  player_1: Player!
  player_2: Player!
  player_3: Player!
  player_4: Player!
  player_5: Player!
}

type Team {
  team_id: ID
  name: String
  players: Players!
}

type CSGOStrategy {
  _id: ID!
  name: String!
  map: String!
  description: String
  side: StrategySide!
  team: Team!
  budget: Int
  createdAt: String!
  updatedAt: String!
}

type Query {
  csgoStrategies: [CSGOStrategy]
  csgoStrategiesByMap(map: String): [CSGOStrategy]
  csgoStrategy(id: String): CSGOStrategy
}

# Define input model for submission
input CSGOStrategyItemInput {
  internal_id: String
}

input LoadoutInput {
  primary: CSGOStrategyItemInput
  secondary: CSGOStrategyItemInput
  gear: [CSGOStrategyItemInput]
  utilities: [CSGOStrategyItemInput]
}

input PositionInput {
  x: Int
  y: Int
}

input PlayerInput {
  color: String
  name: String
  role: String
  loadout: LoadoutInput!
  positions: [PositionInput]
}

input PlayersInput {
  player_1: PlayerInput
  player_2: PlayerInput
  player_3: PlayerInput
  player_4: PlayerInput
  player_5: PlayerInput
}

input TeamInput {
  name: String
  players: PlayersInput
}

input CSGOStrategyInput {
  name: String!
  side: StrategySide!
  description: String
  map: String!
  team: TeamInput
  budget: Int!
}

type Mutation {
  createCSGOStrategy(strategy: CSGOStrategyInput): MutationReturn
  createCSGOStrategies(strategies: [CSGOStrategyInput]): [MutationReturn]
  updateCSGOStrategy(id: String, strategy: CSGOStrategyInput): MutationReturn
  deleteCSGOStrategy(id: String): MutationReturn
  deleteCSGOStrategies(ids: [String]): MutationReturn
}
